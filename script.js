let totalPassengers = 0;
let currentStation = '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∫–∞';
let passengersOnTrain = 0;
const MAX_TRAIN_CAPACITY = 20;
const MAX_STATION_CAPACITY = 50;
let gameOver = false;
let stationPassengers = {
    '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∫–∞': 0,
    '–î—Ä—É–∂–∫–æ–≤–∫–∞': 0,
    '–ö—Ä–∞–º–∞—Ç–æ—Ä—Å–∫': 0,
    '–°–ª–∞–≤—è–Ω—Å–∫': 0
};

const stations = {
    '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–∫–∞': '0%',
    '–î—Ä—É–∂–∫–æ–≤–∫–∞': '33%',
    '–ö—Ä–∞–º–∞—Ç–æ—Ä—Å–∫': '66%',
    '–°–ª–∞–≤—è–Ω—Å–∫': '100%'
};

function updateTable() {
    const rows = document.querySelectorAll('table tr:not(:first-child)');
    rows.forEach(row => {
        const station = row.cells[1].textContent;
        const passengers = stationPassengers[station];
        row.cells[2].textContent = passengers;

        let status, statusClass;
        if (passengers < 15) {
            status = '–ù–∏–∑–∫–∞—è';
            statusClass = 'status-low';
        } else if (passengers < 35) {
            status = '–°—Ä–µ–¥–Ω—è—è';
            statusClass = 'status-medium';
        } else {
            status = '–í—ã—Å–æ–∫–∞—è';
            statusClass = 'status-high';
        }

        row.cells[3].textContent = status;
        row.cells[3].className = statusClass;
    });
}

function checkGameOver() {
    for (let station in stationPassengers) {
        if (stationPassengers[station] >= MAX_STATION_CAPACITY) {
            gameOver = true;
            alert(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ù–∞ —Å—Ç–∞–Ω—Ü–∏–∏ ${station} —Å–∫–æ–ø–∏–ª–æ—Å—å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ (${stationPassengers[station]}).\n–í—Å–µ–≥–æ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: ${totalPassengers}`);
            document.getElementById('sendBtn').disabled = true;
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤
            for (let interval of intervals) {
                clearInterval(interval);
            }
            return true;
        }
    }
    return false;
}

function updateStationPassengers() {
    if (gameOver) return;

    for (let station in stationPassengers) {
        if (stationPassengers[station] < MAX_STATION_CAPACITY) {
            stationPassengers[station] += Math.floor(Math.random() * 3);
            if (stationPassengers[station] > MAX_STATION_CAPACITY) {
                stationPassengers[station] = MAX_STATION_CAPACITY;
            }
        }

        const stationElement = document.querySelector(`.station[data-name="${station}"]`);
        let waitingElement = stationElement.querySelector('.waiting-passengers');
        if (!waitingElement) {
            waitingElement = document.createElement('div');
            waitingElement.className = 'waiting-passengers';
            stationElement.appendChild(waitingElement);
        }
        waitingElement.textContent = `üë• ${stationPassengers[station]}`;
    }

    updateTable();
    checkGameOver();
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Ö –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
let intervals = [];

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—è—Ö
intervals.push(setInterval(updateStationPassengers, 5000));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—è—Ö
updateStationPassengers();

function playTrainHorn() {
    const horn = document.getElementById('hornSound');
    horn.currentTime = 0;
    horn.play();

    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–∞—Ä–∞
    const train = document.getElementById('train');
    const steam = document.createElement('div');
    steam.textContent = 'üí®';
    steam.className = 'steam';
    steam.style.left = '40px';
    steam.style.top = '-20px';
    train.appendChild(steam);

    setTimeout(() => {
        horn.pause();
        horn.currentTime = 0;
        steam.remove();
    }, 2000);
}

function selectRow(row) {
    document.querySelectorAll('tr').forEach(tr => tr.classList.remove('selected'));
    row.classList.add('selected');
}

function sendTrain() {
    if (gameOver) return;

    const selectedRow = document.querySelector('.selected td:nth-child(2)');
    if (!selectedRow) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é!');
        return;
    }

    const destination = selectedRow.innerText;
    if (destination === currentStation) {
        alert('–ü–æ–µ–∑–¥ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —ç—Ç–æ–π —Å—Ç–∞–Ω—Ü–∏–∏!');
        return;
    }

    const train = document.getElementById('train');
    const trainSound = document.getElementById('trainSound');
    const sendBtn = document.getElementById('sendBtn');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –º–æ–∂–µ–º –∑–∞–±—Ä–∞—Ç—å
    const availablePassengers = Math.min(stationPassengers[currentStation], MAX_TRAIN_CAPACITY);

    sendBtn.disabled = true;

    // –ó–∞–±–∏—Ä–∞–µ–º –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–Ω—Ü–∏–∏
    passengersOnTrain = availablePassengers;
    stationPassengers[currentStation] -= availablePassengers;
    updateStationPassengers();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –≤ –ø–æ–µ–∑–¥–µ
    train.querySelector('.train-passengers').textContent = passengersOnTrain;

    train.style.transition = "left 16s linear";
    train.style.left = stations[destination];
    trainSound.play();

    setTimeout(() => {
        train.style.transition = "left 6s ease-out";
        trainSound.src = "poezd-ostanavlivaetsya.mp3";
        trainSound.play();
    }, 9000);

    setTimeout(() => {
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –∫ –æ–±—â–µ–º—É —á–∏—Å–ª—É –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—ã—Ö
        if (passengersOnTrain > 0) {
            totalPassengers += passengersOnTrain;
            document.getElementById('totalPassengers').textContent = totalPassengers;
            alert(`–ü–æ–µ–∑–¥ –ø—Ä–∏–±—ã–ª –≤ ${destination}\n–ü–µ—Ä–µ–≤–µ–∑–µ–Ω–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤: ${passengersOnTrain}`);
        } else {
            alert(`–ü–æ–µ–∑–¥ –ø—Ä–∏–±—ã–ª –≤ ${destination}`);
        }

        currentStation = destination;
        passengersOnTrain = 0;
        train.querySelector('.train-passengers').textContent = '0';
        sendBtn.disabled = false;
        trainSound.src = "v-poezde.mp3";
    }, 18000);
}